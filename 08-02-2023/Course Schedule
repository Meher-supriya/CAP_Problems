class Solution {
    List<List<Integer>> adj = new ArrayList<>();
    public boolean dfs(int src,List<List<Integer>> adj,int[] visited){
        if(visited[src]==1){
            return false;
        }
        if(visited[src]==2){
            return true;
        }
        visited[src]=1;
        for(int neigh:adj.get(src)){
            if(!dfs(neigh,adj,visited)){
                return false;
            }
        }
        visited[src]=2;
        return true;
    }
    public boolean canFinish(int numCourses, int[][] prerequisites) {
        for(int i=0;i<numCourses;i++){
            adj.add(new ArrayList<>());
        }
        for(int i=0;i<prerequisites.length;i++){
            adj.get(prerequisites[i][0]).add(prerequisites[i][1]);
        }
        int[] visited = new int[numCourses];
        for(int i=0;i<adj.size();i++){
            if(!dfs(i,adj,visited)){
                return false;
            }
        }
        return true;
    }
}
