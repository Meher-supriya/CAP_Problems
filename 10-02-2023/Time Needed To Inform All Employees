class Solution {
    class pair{
        int val;
        int time;
        pair(int val,int time){
            this.val=val;
            this.time=time;
        }
    }
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        List<List<Integer>> adj = new ArrayList<>();
        Queue<pair> q= new LinkedList<>();
        for(int i=0;i<n;i++){
            adj.add(new ArrayList<>());
        }
        for(int i=0;i<n;i++){
            if(manager[i]!=-1){
                adj.get(manager[i]).add(i);
            }
        }
        int max_time=0;
        if(n==1){
            return informTime[0];
        }
        q.add(new pair(headID,informTime[headID]));
        while(!q.isEmpty()){
                int temp=q.peek().val;
                int time=q.peek().time;
                q.poll();
                max_time=Math.max(max_time,time);
                for(int sub:adj.get(temp)){
                    q.add(new pair(sub,informTime[sub]+time));
                } 
        }
        return max_time;
    }
}
