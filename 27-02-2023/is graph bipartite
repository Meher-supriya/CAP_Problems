class Solution {
    public boolean check(int start, int[][] graph,int[] color){
        Queue<Integer> q = new LinkedList<>();
        q.add(start);
        color[start]=0;
        while(!q.isEmpty()){
            int value = q.poll();
            for(int neigh: graph[value]){
                if(color[neigh]==-1){
                    color[neigh]=1-color[value];
                    q.add(neigh);
                }
                else if(color[neigh]==color[value]){
                    return false;
                }
            }
        }
        return true;
    }
    public boolean isBipartite(int[][] graph) {
        //graph is adjacency matrix
        int[] color = new int[graph.length];
        Arrays.fill(color,-1);
        for(int i=0;i<graph.length;i++){
            if(color[i]==-1 && graph[i].length>0){
                if(check(i,graph,color)==false){
                    return false;
                }
            }
        }
        for(int i=0;i<color.length;i++){
            System.out.println(color[i]);
        }
        return true;
    }
}
